form#payment-form(action="/myaccount/addfund/checkouts", method="post")
  section
    .bt-drop-in-wrapper
      #bt-dropin

    label(for="amount")
      span.input-label Amount
      .input-wrapper.amount-wrapper
        input#amount(name="amount" type="tel" min="1" placeholder="Amount" value="10")

  button.btn.btn-primary.button(type="submit")
    span Submit
script(src="https://js.braintreegateway.com/js/braintree-2.27.0.min.js")
script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js")
script.
  (function () {
    var token = "#{clientToken}";

    braintree.setup(token, "dropin", {
      container: "bt-dropin",
      onPaymentMethodReceived: function(res){
        var payment_method_nonce=res.nonce;
        var amount = $('#amount').val();
        $.ajax({
          type: "POST",
          url: '/moneytransfer/post_moneytransfer',
          data: {'payment_method_nonce':payment_method_nonce,'amount':amount},
          success: function(json){
            if (json.result==1){
              $.post("/moneytransfer/post_hyper_pay", {
                hyperwallet_moneytransfer_response: hyperwallet_moneytransfer_response,
                hyperusertoken:hyperusertoken,
                amount:amount
                }, function(data) {
                // Set up the Twilio Client Device with the token
                if (data.result=='success'){
                  step_widzard.bootstrapWizard('next');
                }else{
                  for (var i =0;i<data.msg.length;i++)
                  toastr.error(data.msg[i].message);
                }
                
              });
              
            }else{
              toastr.error(json.msg);
            }
          },
          error:function(error){
            toastr.error(error);
          },
          dataType: 'json'
        });
      }
    });
  })()
  //
    #widget
  //
    script(src='https://api.sandbox.hyperwallet.com/rest/widgets/transfer-methods/'+hyperusertoken+'/en.min.js')
    script(type='text/javascript').
      
        /*var hyperun = '#{hyperun}';
        var hyperpw = '#{hyperpw}';
        var hyperwallet_moneytransfer_response = null;
        var hyperusertoken = '#{hyperusertoken}';
        var widget = HWWidgets.transferMethods.configure({
        "template": "bootstrap3",
        "el": document.getElementById("widget"),
        "skipProfileFields": true,
          "transferMethodConfiguration": {
             "profileType": "INDIVIDUAL"
          },
        "onComplete": function (data) {
          $.ajax({
            type: "POST",
            url: 'https://api.sandbox.hyperwallet.com/rest/v3/users/'+hyperusertoken+'/transfer-methods',

            contentType:'application/json',
            beforeSend: function (xhr) {
                xhr.setRequestHeader ("Authorization", "Basic " + btoa(hyperun + ":" + hyperpw));
                xhr.setRequestHeader ("Json-Cache-Token", data.token);
                xhr.setRequestHeader ("Content-Type", "application/json");
                xhr.setRequestHeader ("Accept", "application/json");
            },
            processData: false,
            data: '{"foo":"bar"}',
            dataType:'json',
            success: function(json){
              console.log(json);
              hyperwallet_moneytransfer_response = json;
              step_widzard.bootstrapWizard('next');
            },
            error:function(error){
              console.log(error);
              var msgs = JSON.parse(error.responseText).errors;
              for (var i =0;i<msgs.length;i++)
              toastr.error(msgs[i].message);
            }
          });
          console.log("Received token: " + data.token);
          hyperwallet_moneytransfer_response = data;
          this.setData({});
          /*step_widzard.bootstrapWizard('next');*/
        },
        "onError": function (errors, state) {
          /*step_widzard.bootstrapWizard('next');*/
          console.log(errors);
        }
        });
        widget.create(); //display widget*/
